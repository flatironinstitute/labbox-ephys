{
    // See https://go.microsoft.com/fwlink/?LinkId=733558
    // for the documentation about the tasks.json format
    // The "bash -ic" is needed here so that our ~/.bashrc gets sourced. See: https://github.com/microsoft/vscode/issues/29412
    "version": "2.0.0",
    "tasks": [
        {
            "label": "start dev api",
            "type": "shell",
            "command": "bash -ic .vscode/tasks/start_dev_api.sh",
            "problemMatcher": []
        },
        {
            "label": "start dev client",
            "type": "shell",
            "command": "bash -ic .vscode/tasks/start_dev_client.sh"
        },
        {
            "label": "_start_dev",
            "type": "shell",
            "command": "echo 'Starting the dev api and client tasks...' && sleep 3 && echo 'Point your browser to http://localhost:15351'"
        },
        {
            "label": "START DEV",
            "type": "shell",
            "command": "echo 'Starting the dev api and client tasks...' && sleep 3 && echo 'Point your browser to http://localhost:15351'",
            "dependsOn": [
                "start dev api",
                "start dev client",
                "_start_dev"
            ]
        },
        {
            "label": "start test prod api",
            "type": "shell",
            "command": "bash -ic .vscode/tasks/start_test_prod_api.sh"
        },
        {
            "label": "start test prod client",
            "type": "shell",
            "command": "bash -ic .vscode/tasks/start_test_prod_client.sh"
        },
        {
            "label": "_start_test_prod",
            "type": "shell",
            "command": "echo 'This will start the test prod api and client as well as the nginx server. Point your browser to http://localhost:15371'"
        },
        {
            "label": "START TEST PROD",
            "dependsOn": [
                "start test prod api",
                "start test prod client",
                "start nginx",
                "_start_test_prod"
            ]
        },
        {
            "label": "build test prod client",
            "type": "shell",
            "command": "bash -ic .vscode/tasks/build_test_prod_client.sh"
        },
        {
            "label": "yarn install",
            "type": "shell",
            "command": "bash -ic .vscode/tasks/yarn_install.sh"
        },
        {
            "label": "start jupyter lab",
            "type": "shell",
            "command": "bash -ic .vscode/tasks/start_jupyter_lab.sh"
        },
        {
            "label": "code generation",
            "type": "shell",
            "command": "bash -ic .vscode/tasks/code_generation.sh"
        },
        {
            "label": "start code sync",
            "type": "shell",
            // You must install unison and unison-fsmonitor
            // curl -L -o unison-fsmonitor https://github.com/TentativeConvert/Syndicator/raw/master/unison-binaries/unison-fsmonitor
            "command": "bash -ic .vscode/tasks/start_code_sync.sh"
        },
        {
            "label": "jupyterlab dev",
            "type": "shell",
            // run jupyter lab in watch mode
            "command": "jupyter lab --watch"
        },
        {
            "label": "labextension install",
            "type": "shell",
            // run jupyter lab in watch mode
            "command": "cd jupyterlab/labbox_ephys_widgets_jp && pip install -e . && jupyter labextension install @jupyter-widgets/jupyterlab-manager --no-build && jupyter labextension install ."
        },
        {
            "label": "labextension dev",
            "type": "shell",
            // run jupyter lab in watch mode
            "command": "cd jupyterlab/labbox_ephys_widgets_jp && npm run watch"
        }
    ]
}